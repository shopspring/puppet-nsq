## <addr>:<port> to listen on for HTTP clients
http_address = "<%= scope.lookupvar('nsq::nsqadmin::http_address') %>"

## graphite HTTP address
graphite_url = ""

## proxy HTTP requests to graphite
proxy_graphite = false

## duration to wait before HTTP client connection timeout
http_client_connect_timeout = "<%= scope.lookupvar('nsq::nsqadmin::http_client_connect_timeout') %>"

## duration to wait before HTTP client request timeout
http_client_request_timeout = "<%= scope.lookupvar('nsq::nsqadmin::http_client_request_timeout') %>"

## prefix used for keys sent to statsd (%s for host replacement, must match nsqd)
statsd_prefix = "<%= scope.lookupvar('nsq::nsqadmin::statsd_prefix') %>"

## format of statsd counter stats
statsd_counter_format = "stats.counters.%s.count"

## format of statsd gauge stats
statsd_gauge_format = "stats.gauges.%s"

## time interval nsqd is configured to push to statsd (must match nsqd)
statsd_interval = "60s"

## HTTP endpoint (fully qualified) to which POST notifications of admin actions will be sent
notification_http_endpoint = ""

## nsqlookupd HTTP addresses
nsqlookupd_http_addresses = [
<% scope.lookupvar('nsq::nsqadmin::nsqlookupd_addresses').each do |val| -%>
    "<%= val -%>",
<% end -%>
]

## nsqd HTTP addresses (optional)
#nsqd_http_addresses = [
#    "127.0.0.1:4151"
#]
#
### log verbosity level: debug, info, warn, error, or fatal
log-level = "<%= scope.lookupvar('nsq::nsqadmin::log_level') %>"
